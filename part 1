- name: Install required packages
  become: yes
  yum:
    name:
      - epel-release
      - yum-utils
      - nodejs
      - nginx
    state: present


- name: Configure nginx
  become: yes
  copy:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
    mode: '0644'
  notify:
    - Restart nginx



user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;
        location / {
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}



- name: Install and configure Node.js
  become: yes
  npm:
    name: pm2
    global: yes

- name: Start Node.js application
  become: yes
  shell: pm2 start index.js --name my-app




- name: Install and configure MongoDB
  become: yes
  mongodb_user:
    login_user: admin
    login_password: mypassword
    database: admin
    name: myuser
    password: mypassword
    roles:
      - dbOwner

- name: Start MongoDB
  become: yes
  service:
    name: mongod
    state: started





---------------------------------------------------------------------------------------------------------------------------------------------------

---
- name: Setup web server
  hosts: webserver
  become: yes

  tasks:
    # Install Node.js
    - name: Install Node.js
      yum:
        name: nodejs
        state: present

    # Install MongoDB
    - name: Add MongoDB repository
      yum_repository:
        name: mongodb-org-4.4
        description: MongoDB Repository
        baseurl: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.4/x86_64/
        gpgcheck: 1
        enabled: 1
        gpgkey: https://www.mongodb.org/static/pgp/server-4.4.asc
      when: ansible_distribution_major_version == "8"
      
    - name: Install MongoDB
      yum:
        name: mongodb-org
        state: present
      when: ansible_distribution_major_version == "8"

    # Install Nginx
    - name: Install Nginx
      yum:
        name: nginx
        state: present

    # Configure Nginx
    - name: Copy Nginx configuration file
      copy:
        src: files/nginx.conf
        dest: /etc/nginx/nginx.conf

    # Start services
    - name: Start MongoDB
      service:
        name: mongod
        state: started
      when: ansible_distribution_major_version == "8"

    - name: Start Nginx
      service:
        name: nginx
        state: started



mkdir files
cp nginx.conf files/nginx.conf
3


worker_processes  1;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    server {
        listen       80;
        server_name  your_server_name;
        location / {
            proxy_pass http://localhost:3000;
        }
    }
}




-----------------------------------------------------------------------------------------------------------------

---
- name: Install nginx, Node.js, and MongoDB on Ubuntu
  hosts: your_server
  become: yes
  vars:
    node_version: 16.x
    mongodb_version: 4.4
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install nginx
      apt:
        name: nginx
        state: present

    - name: Install Node.js
      apt:
        name: "curl"
        state: present

    - name: Install Node.js PPA
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_{{ node_version }} {{ ansible_distribution_release }} main"
        state: present
      notify: restart nginx

    - name: Install MongoDB
      apt_key:
        url: https://www.mongodb.org/static/pgp/server-{{ mongodb_version }}.asc
        state: present
      apt_repository:
        repo: "deb https://repo.mongodb.org/apt/ubuntu {{ ansible_distribution_release }}/mongodb-org/{{ mongodb_version }} multiverse"
        state: present
      apt:
        name: mongodb-org
        state: present

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted


------------------------------------------------------------------------------------------------------------------------------------------

- name: Install required packages
  apt:
    name: ['nginx', 'nodejs', 'npm', 'mongodb']
    state: present


- name: Configure nginx
  copy:
    src: /path/to/nginx.conf
    dest: /etc/nginx/nginx.conf
  notify: restart nginx


- name: Clone git repository
  git:
    repo: https://github.com/user/repo.git
    dest: /home/ubuntu/app
- name: Install app dependencies
  npm:
    path: /home/ubuntu/app
    state: present


- name: Configure MongoDB
  copy:
    src: /path/to/mongodb.conf
    dest: /etc/mongodb.conf
  notify: restart mongodb



- name: Start the application
  command: npm start
  args:
    chdir: /home/ubuntu/app



